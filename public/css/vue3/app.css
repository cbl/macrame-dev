/*! tailwindcss v2.2.2 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
	-moz-tab-size: 4;
	-o-tab-size: 4;
	   tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
	-webkit-text-decoration: underline dotted;
	        text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: Inter, sans-serif; /* 1 */
  line-height: 1.5; /* 2 */
}


/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #DAE1E8;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #DAE1E8;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #DAE1E8;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

*, ::before, ::after {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	--tw-border-opacity: 1;
	border-color: rgba(238, 242, 247, var(--tw-border-opacity));
	--tw-shadow: 0 0 #0000;
	--tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(73, 81, 242, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-blur: var(--tw-empty,/*!*/ /*!*/);
	--tw-brightness: var(--tw-empty,/*!*/ /*!*/);
	--tw-contrast: var(--tw-empty,/*!*/ /*!*/);
	--tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
	--tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
	--tw-invert: var(--tw-empty,/*!*/ /*!*/);
	--tw-saturate: var(--tw-empty,/*!*/ /*!*/);
	--tw-sepia: var(--tw-empty,/*!*/ /*!*/);
	--tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
	--tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
	--tw-backdrop-blur: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-brightness: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-contrast: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-grayscale: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-invert: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-opacity: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-saturate: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-sepia: var(--tw-empty,/*!*/ /*!*/);
	--tw-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.fixed {
	position: fixed;
}
.relative {
	position: relative;
}
.m-2 {
	margin: 0.5rem;
}
.mt-2 {
	margin-top: 0.5rem;
}
.mb-5 {
	margin-bottom: 1.25rem;
}
.mr-4 {
	margin-right: 1rem;
}
.inline-block {
	display: inline-block;
}
.flex {
	display: flex;
}
.inline-flex {
	display: inline-flex;
}
.table {
	display: table;
}
.\!table {
	display: table !important;
}
.h-6 {
	height: 1.5rem;
}
.h-3 {
	height: 0.75rem;
}
.h-full {
	height: 100%;
}
.h-12 {
	height: 3rem;
}
.h-10 {
	height: 2.5rem;
}
.h-7 {
	height: 1.75rem;
}
.h-8 {
	height: 2rem;
}
.h-5 {
	height: 1.25rem;
}
.h-4 {
	height: 1rem;
}
.w-6 {
	width: 1.5rem;
}
.w-3 {
	width: 0.75rem;
}
.w-full {
	width: 100%;
}
.w-2\/3 {
	width: 66.666667%;
}
.w-1\/3 {
	width: 33.333333%;
}
.w-12 {
	width: 3rem;
}
.w-10 {
	width: 2.5rem;
}
.w-7 {
	width: 1.75rem;
}
.w-16 {
	width: 4rem;
}
.w-8 {
	width: 2rem;
}
.w-4 {
	width: 1rem;
}
.translate-x-\[1px\] {
	--tw-translate-x: 1px;
	transform: var(--tw-transform);
}
.translate-x-px {
	--tw-translate-x: 1px;
	transform: var(--tw-transform);
}
.translate-x-8 {
	--tw-translate-x: 2rem;
	transform: var(--tw-transform);
}
.translate-x-\[21px\] {
	--tw-translate-x: 21px;
	transform: var(--tw-transform);
}
.translate-x-\[17px\] {
	--tw-translate-x: 17px;
	transform: var(--tw-transform);
}
.translate-x-\[32px\] {
	--tw-translate-x: 32px;
	transform: var(--tw-transform);
}
.translate-x-\[33px\] {
	--tw-translate-x: 33px;
	transform: var(--tw-transform);
}
.translate-x-5 {
	--tw-translate-x: 1.25rem;
	transform: var(--tw-transform);
}
.translate-x-4 {
	--tw-translate-x: 1rem;
	transform: var(--tw-transform);
}
.transform {
	transform: var(--tw-transform);
}
.cursor-default {
	cursor: default;
}
.flex-col {
	flex-direction: column;
}
.flex-wrap {
	flex-wrap: wrap;
}
.items-center {
	align-items: center;
}
.justify-center {
	justify-content: center;
}
.gap-5 {
	gap: 1.25rem;
}
.space-x-5 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(1.25rem * var(--tw-space-x-reverse));
	margin-left: calc(1.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.rounded-xs {
	border-radius: 6px;
}
.rounded-lg {
	border-radius: 19px;
}
.rounded-md {
	border-radius: 15px;
}
.rounded-sm {
	border-radius: 11px;
}
.rounded-full {
	border-radius: 9999px;
}
.border {
	border-width: 1px;
}
.border-b {
	border-bottom-width: 1px;
}
.border-blue {
	--tw-border-opacity: 1;
	border-color: rgba(73, 81, 242, var(--tw-border-opacity));
}
.border-gray-700 {
	--tw-border-opacity: 1;
	border-color: rgba(108, 129, 153, var(--tw-border-opacity));
}
.border-gray {
	--tw-border-opacity: 1;
	border-color: rgba(108, 129, 153, var(--tw-border-opacity));
}
.border-green {
	--tw-border-opacity: 1;
	border-color: rgba(120, 255, 191, var(--tw-border-opacity));
}
.border-red {
	--tw-border-opacity: 1;
	border-color: rgba(255, 138, 150, var(--tw-border-opacity));
}
.border-yellow {
	--tw-border-opacity: 1;
	border-color: rgba(255, 220, 101, var(--tw-border-opacity));
}
.border-blue-500 {
	--tw-border-opacity: 1;
	border-color: rgba(73, 81, 242, var(--tw-border-opacity));
}
.border-gray-500 {
	--tw-border-opacity: 1;
	border-color: rgba(207, 217, 226, var(--tw-border-opacity));
}
.border-green-500 {
	--tw-border-opacity: 1;
	border-color: rgba(64, 255, 164, var(--tw-border-opacity));
}
.border-red-500 {
	--tw-border-opacity: 1;
	border-color: rgba(212, 0, 46, var(--tw-border-opacity));
}
.border-yellow-500 {
	--tw-border-opacity: 1;
	border-color: rgba(255, 203, 24, var(--tw-border-opacity));
}
.border-white {
	--tw-border-opacity: 1;
	border-color: rgba(255, 255, 255, var(--tw-border-opacity));
}
.bg-blue {
	--tw-bg-opacity: 1;
	background-color: rgba(73, 81, 242, var(--tw-bg-opacity));
}
.bg-gray-700 {
	--tw-bg-opacity: 1;
	background-color: rgba(108, 129, 153, var(--tw-bg-opacity));
}
.bg-green {
	--tw-bg-opacity: 1;
	background-color: rgba(120, 255, 191, var(--tw-bg-opacity));
}
.bg-red {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 138, 150, var(--tw-bg-opacity));
}
.bg-yellow {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 220, 101, var(--tw-bg-opacity));
}
.bg-gray-300 {
	--tw-bg-opacity: 1;
	background-color: rgba(229, 234, 239, var(--tw-bg-opacity));
}
.bg-white {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}
.bg-blue-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(73, 81, 242, var(--tw-bg-opacity));
}
.bg-gray-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(207, 217, 226, var(--tw-bg-opacity));
}
.bg-green-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(64, 255, 164, var(--tw-bg-opacity));
}
.bg-red-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(212, 0, 46, var(--tw-bg-opacity));
}
.bg-yellow-500 {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 203, 24, var(--tw-bg-opacity));
}
.bg-gradient-to-r {
	background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.from-green-500 {
	--tw-gradient-from: #40FFA4;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(64, 255, 164, 0));
}
.from-blue-400 {
	--tw-gradient-from: #6489FF;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(100, 137, 255, 0));
}
.to-blue-600 {
	--tw-gradient-to: #3038CA;
}
.to-red-500 {
	--tw-gradient-to: #D4002E;
}
.fill-current {
	fill: currentColor;
}
.p-24 {
	padding: 6rem;
}
.p-4 {
	padding: 1rem;
}
.p-6 {
	padding: 1.5rem;
}
.p-12 {
	padding: 3rem;
}
.p-8 {
	padding: 2rem;
}
.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}
.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.px-6 {
	padding-left: 1.5rem;
	padding-right: 1.5rem;
}
.px-5 {
	padding-left: 1.25rem;
	padding-right: 1.25rem;
}
.text-right {
	text-align: right;
}
.text-sm {
	font-size: 12px;
	line-height: 21px;
}
.text-lg {
	font-size: 16px;
	line-height: 24px;
}
.text-base {
	font-size: 14px;
	line-height: 24px;
}
.text-xs {
	font-size: 10px;
	line-height: 17px;
}
.text-white {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.text-gray-500 {
	--tw-text-opacity: 1;
	color: rgba(207, 217, 226, var(--tw-text-opacity));
}
.text-green-700 {
	--tw-text-opacity: 1;
	color: rgba(35, 129, 85, var(--tw-text-opacity));
}
.text-red-700 {
	--tw-text-opacity: 1;
	color: rgba(122, 0, 26, var(--tw-text-opacity));
}
.text-yellow-700 {
	--tw-text-opacity: 1;
	color: rgba(167, 111, 0, var(--tw-text-opacity));
}
.text-gray-600 {
	--tw-text-opacity: 1;
	color: rgba(166, 181, 197, var(--tw-text-opacity));
}
.text-blue {
	--tw-text-opacity: 1;
	color: rgba(73, 81, 242, var(--tw-text-opacity));
}
.text-gray-700 {
	--tw-text-opacity: 1;
	color: rgba(108, 129, 153, var(--tw-text-opacity));
}
.text-gray {
	--tw-text-opacity: 1;
	color: rgba(108, 129, 153, var(--tw-text-opacity));
}
.text-green {
	--tw-text-opacity: 1;
	color: rgba(120, 255, 191, var(--tw-text-opacity));
}
.text-red {
	--tw-text-opacity: 1;
	color: rgba(255, 138, 150, var(--tw-text-opacity));
}
.text-yellow {
	--tw-text-opacity: 1;
	color: rgba(255, 220, 101, var(--tw-text-opacity));
}
.shadow {
	--tw-shadow: 0px 0px 19px 0px rgba(0,0,0,0.08);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.transition-all {
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}
.hover\:bg-blue-700:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(37, 44, 159, var(--tw-bg-opacity));
}
.hover\:bg-blue-100:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(237, 242, 255, var(--tw-bg-opacity));
}
.hover\:bg-gray-800:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(90, 103, 118, var(--tw-bg-opacity));
}
.hover\:bg-gray-300:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(229, 234, 239, var(--tw-bg-opacity));
}
.hover\:bg-green-700:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(35, 129, 85, var(--tw-bg-opacity));
}
.hover\:bg-green-100:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(231, 255, 243, var(--tw-bg-opacity));
}
.hover\:bg-red-500:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(212, 0, 46, var(--tw-bg-opacity));
}
.hover\:bg-red-100:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 227, 230, var(--tw-bg-opacity));
}
.hover\:bg-yellow-700:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(167, 111, 0, var(--tw-bg-opacity));
}
.hover\:bg-yellow-100:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 246, 216, var(--tw-bg-opacity));
}
.hover\:text-blue-600:hover {
	--tw-text-opacity: 1;
	color: rgba(48, 56, 202, var(--tw-text-opacity));
}
.hover\:text-blue-700:hover {
	--tw-text-opacity: 1;
	color: rgba(37, 44, 159, var(--tw-text-opacity));
}
.hover\:text-gray-700:hover {
	--tw-text-opacity: 1;
	color: rgba(108, 129, 153, var(--tw-text-opacity));
}
.hover\:text-green-600:hover {
	--tw-text-opacity: 1;
	color: rgba(55, 202, 133, var(--tw-text-opacity));
}
.hover\:text-green-700:hover {
	--tw-text-opacity: 1;
	color: rgba(35, 129, 85, var(--tw-text-opacity));
}
.hover\:text-red-600:hover {
	--tw-text-opacity: 1;
	color: rgba(212, 0, 46, var(--tw-text-opacity));
}
.hover\:text-red-700:hover {
	--tw-text-opacity: 1;
	color: rgba(122, 0, 26, var(--tw-text-opacity));
}
.hover\:text-yellow-600:hover {
	--tw-text-opacity: 1;
	color: rgba(230, 184, 24, var(--tw-text-opacity));
}
.hover\:text-yellow-700:hover {
	--tw-text-opacity: 1;
	color: rgba(167, 111, 0, var(--tw-text-opacity));
}
.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.focus\:ring:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\:ring-4:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\:ring-blue-400:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(100, 137, 255, var(--tw-ring-opacity));
}
.focus\:ring-gray-400:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(218, 225, 232, var(--tw-ring-opacity));
}
.focus\:ring-green-400:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(120, 255, 191, var(--tw-ring-opacity));
}
.focus\:ring-red-400:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(255, 138, 150, var(--tw-ring-opacity));
}
.focus\:ring-yellow-400:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(255, 220, 101, var(--tw-ring-opacity));
}
.focus\:ring-blue-300:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(171, 194, 255, var(--tw-ring-opacity));
}
.active\:bg-blue-800:active {
	--tw-bg-opacity: 1;
	background-color: rgba(30, 33, 109, var(--tw-bg-opacity));
}
.active\:bg-blue-300:active {
	--tw-bg-opacity: 1;
	background-color: rgba(171, 194, 255, var(--tw-bg-opacity));
}
.active\:bg-gray-900:active {
	--tw-bg-opacity: 1;
	background-color: rgba(64, 74, 86, var(--tw-bg-opacity));
}
.active\:bg-gray-500:active {
	--tw-bg-opacity: 1;
	background-color: rgba(207, 217, 226, var(--tw-bg-opacity));
}
.active\:bg-green-800:active {
	--tw-bg-opacity: 1;
	background-color: rgba(20, 84, 54, var(--tw-bg-opacity));
}
.active\:bg-green-300:active {
	--tw-bg-opacity: 1;
	background-color: rgba(166, 255, 213, var(--tw-bg-opacity));
}
.active\:bg-red-600:active {
	--tw-bg-opacity: 1;
	background-color: rgba(212, 0, 46, var(--tw-bg-opacity));
}
.active\:bg-red-300:active {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 169, 177, var(--tw-bg-opacity));
}
.active\:bg-yellow-800:active {
	--tw-bg-opacity: 1;
	background-color: rgba(104, 69, 0, var(--tw-bg-opacity));
}
.active\:bg-yellow-300:active {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 231, 147, var(--tw-bg-opacity));
}
.active\:text-blue-700:active {
	--tw-text-opacity: 1;
	color: rgba(37, 44, 159, var(--tw-text-opacity));
}
.active\:text-blue-900:active {
	--tw-text-opacity: 1;
	color: rgba(12, 18, 45, var(--tw-text-opacity));
}
.active\:text-gray-900:active {
	--tw-text-opacity: 1;
	color: rgba(64, 74, 86, var(--tw-text-opacity));
}
.active\:text-green-700:active {
	--tw-text-opacity: 1;
	color: rgba(35, 129, 85, var(--tw-text-opacity));
}
.active\:text-green-900:active {
	--tw-text-opacity: 1;
	color: rgba(15, 64, 41, var(--tw-text-opacity));
}
.active\:text-red-700:active {
	--tw-text-opacity: 1;
	color: rgba(122, 0, 26, var(--tw-text-opacity));
}
.active\:text-red-900:active {
	--tw-text-opacity: 1;
	color: rgba(61, 0, 13, var(--tw-text-opacity));
}
.active\:text-yellow-700:active {
	--tw-text-opacity: 1;
	color: rgba(167, 111, 0, var(--tw-text-opacity));
}
.active\:text-yellow-900:active {
	--tw-text-opacity: 1;
	color: rgba(81, 54, 0, var(--tw-text-opacity));
}

